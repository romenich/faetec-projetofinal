/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sistemadecontas;

import java.io.File;
import javax.swing.JOptionPane;
import java.sql.*;


/**
 *
 * @author romenik
 */
public class PaginaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form PaginaPrincipal
     */
    public PaginaPrincipal() {
        initComponents();
        nomeUsuario.setToolTipText("Digite o nome de usuário.");
        senhaUsuario.setToolTipText("Digite a senha do usuário.");
        botaoEntrar.setToolTipText("Clique para entrar.");
        cadastroBOTAO.setToolTipText("Clique para cadastrar, se ainda não possuir uma conta.");
        botaoLimpar.setToolTipText("Clique para limpar os campos.");
        botaoEntrar.setDefaultCapable(true);
        criarTabelaContaAcesso();
    }

    private void criarTabelaContaAcesso() {
        String homeDir = System.getProperty("user.home");
        String url = "jdbc:sqlite:" + homeDir + File.separator + "Documentos" + File.separator + "contaacesso.db";
        String sql = "CREATE TABLE IF NOT EXISTS contaAcesso (\n"
                + "    idAcesso INTEGER PRIMARY KEY AUTOINCREMENT,\n"
                + "    usuarioAcesso TEXT NOT NULL,\n"
                + "    senhaAcesso TEXT NOT NULL\n"
                + ");";

        try {
            Class.forName("org.sqlite.JDBC");
            Connection conn = DriverManager.getConnection(url);
            Statement stmt = conn.createStatement();
            // Criando a tabela caso não exista
            stmt.execute(sql);
            conn.close();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        senhaUsuario = new javax.swing.JLabel();
        nomeUsuario = new javax.swing.JLabel();
        campoUsuario = new javax.swing.JTextField();
        campoSenha = new javax.swing.JPasswordField();
        botaoEntrar = new javax.swing.JButton();
        painelSoftware = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        botaoLimpar = new javax.swing.JButton();
        botaoSobre = new javax.swing.JButton();
        cadastroBOTAO = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Contas");
        setBackground(new java.awt.Color(255, 255, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.cyan);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        senhaUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        senhaUsuario.setForeground(java.awt.Color.blue);
        senhaUsuario.setText("Senha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 279, 0, 0);
        getContentPane().add(senhaUsuario, gridBagConstraints);

        nomeUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nomeUsuario.setForeground(java.awt.Color.blue);
        nomeUsuario.setText("Usuário: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 279, 0, 0);
        getContentPane().add(nomeUsuario, gridBagConstraints);

        campoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoUsuarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 126;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 8, 0, 0);
        getContentPane().add(campoUsuario, gridBagConstraints);

        campoSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSenhaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 126;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 8, 0, 0);
        getContentPane().add(campoSenha, gridBagConstraints);

        botaoEntrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botaoEntrar.setForeground(java.awt.Color.blue);
        botaoEntrar.setText("Entrar");
        botaoEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEntrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(75, 152, 0, 0);
        getContentPane().add(botaoEntrar, gridBagConstraints);

        painelSoftware.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel3.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("      Sistema de Controle Patrimonial");

        javax.swing.GroupLayout painelSoftwareLayout = new javax.swing.GroupLayout(painelSoftware);
        painelSoftware.setLayout(painelSoftwareLayout);
        painelSoftwareLayout.setHorizontalGroup(
            painelSoftwareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSoftwareLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
        );
        painelSoftwareLayout.setVerticalGroup(
            painelSoftwareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSoftwareLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(38, 38, 38))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipady = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        getContentPane().add(painelSoftware, gridBagConstraints);

        botaoLimpar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botaoLimpar.setForeground(java.awt.Color.blue);
        botaoLimpar.setText("Limpar ");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(128, 223, 5, 2);
        getContentPane().add(botaoLimpar, gridBagConstraints);

        botaoSobre.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botaoSobre.setForeground(java.awt.Color.blue);
        botaoSobre.setText("Sobre");
        botaoSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSobreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(128, 0, 5, 0);
        getContentPane().add(botaoSobre, gridBagConstraints);

        cadastroBOTAO.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cadastroBOTAO.setForeground(java.awt.Color.blue);
        cadastroBOTAO.setText("Cadastrar");
        cadastroBOTAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroBOTAOActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(75, 239, 0, 0);
        getContentPane().add(cadastroBOTAO, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoUsuarioActionPerformed

    private void botaoEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEntrarActionPerformed
        // TODO add your handling code here:

        try {
            String usuario = campoUsuario.getText();
            String senha = new String(campoSenha.getPassword()); // para obter a senha como uma String

            if (usuario.isEmpty() || senha.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Por favor, preencha todos os campos.");
                return;
            }
            // Conectando ao banco de dados
            String url = "jdbc:sqlite:contaacesso.db";
            try (Connection conn = DriverManager.getConnection(url)) {
                // Definindo SQL para verificar o usuário e senha
                String sql = "SELECT * FROM contaAcesso WHERE usuarioAcesso = ? AND senhaAcesso = ?";
                try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                    pstmt.setString(1, usuario);
                    pstmt.setString(2, senha);

                    // Executando a consulta
                    ResultSet rs = pstmt.executeQuery();

                    // Verificando se o usuário e a senha correspondem a um registro
                    if (rs.next()) {
                        // Se correspondem, abra a tela de boas-vindas
                        PainelBoasVindas newFrame = new PainelBoasVindas();
                        newFrame.setVisible(true);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Usuário ou senha incorretos.");
                    }
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao fazer login.");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro.");
        }
    }
//GEN-LAST:event_botaoEntrarActionPerformed

    private void botaoSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSobreActionPerformed
        // TODO add your handling code here:
        // curta mensagem explicando do que se trata o software
        String mensagem = "Esse software serve para calcular o Patrimônio Líquido de uma empresa,\n"
                + "e foi desenvolvido para o Projeto Final do curso Técnico em Informática,\n"
                + "da Faetec de Santo Antônio de Pádua - RJ.";
        JOptionPane.showMessageDialog(this, mensagem, "Sobre", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botaoSobreActionPerformed

    private void cadastroBOTAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroBOTAOActionPerformed
        // TODO add your handling code here:

        try {
            String usuario = campoUsuario.getText();
            String senhaTexto = new String(campoSenha.getPassword()); // para obter a senha como uma String

            if (usuario.isEmpty() || senhaTexto.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Por favor, preencha todos os campos.");
                return;
            }

            // Conecte-se ao banco de dados SQLite
            String url = "jdbc:sqlite:contaacesso.db";
            try (Connection conn = DriverManager.getConnection(url)) {
                // Definir a instrução SQL para inserir dados na tabela contaAcesso,
                // omitindo o ID único, que será gerado automaticamente pelo banco de dados
                String sql = "INSERT INTO contaAcesso (usuarioAcesso, senhaAcesso) VALUES (?, ?)";
                try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                    pstmt.setString(1, usuario);
                    pstmt.setString(2, senhaTexto);

                    // Execute a inserção
                    pstmt.executeUpdate();
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao cadastrar.");
                return;
            }

            // Limpe os campos após o cadastro
            campoUsuario.setText("");
            campoSenha.setText("");

            // Exibir mensagem de sucesso no cadastro
            JOptionPane.showMessageDialog(rootPane, "Cadastro realizado com sucesso!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro.");
        }


    }//GEN-LAST:event_cadastroBOTAOActionPerformed

    private void campoSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoSenhaActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        // TODO add your handling code here:
        //setando o texto para uma variável vazia a fim de limpar os campos

        campoUsuario.setText("");
        campoSenha.setText("");
    }//GEN-LAST:event_botaoLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaginaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaginaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEntrar;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoSobre;
    private javax.swing.JButton cadastroBOTAO;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel nomeUsuario;
    private javax.swing.JPanel painelSoftware;
    private javax.swing.JLabel senhaUsuario;
    // End of variables declaration//GEN-END:variables
}
